# Autogenerated wrapper script for asdf_cxx_jll for i686-w64-mingw32-cxx11
export asdf_copy, asdf_demo, asdf_demo_compression, asdf_demo_external, asdf_demo_large, asdf_ls, libasdf_cxx

using Blosc2_jll
using Blosc_jll
using Bzip2_jll
using OpenSSL_jll
using Zlib_jll
using Zstd_jll
using yaml_cpp_jll
JLLWrappers.@generate_wrapper_header("asdf_cxx")
JLLWrappers.@declare_library_product(libasdf_cxx, "libasdf-cxx.dll")
JLLWrappers.@declare_executable_product(asdf_copy)
JLLWrappers.@declare_executable_product(asdf_demo)
JLLWrappers.@declare_executable_product(asdf_demo_compression)
JLLWrappers.@declare_executable_product(asdf_demo_external)
JLLWrappers.@declare_executable_product(asdf_demo_large)
JLLWrappers.@declare_executable_product(asdf_ls)
function __init__()
    JLLWrappers.@generate_init_header(Blosc2_jll, Blosc_jll, Bzip2_jll, OpenSSL_jll, Zlib_jll, Zstd_jll, yaml_cpp_jll)
    JLLWrappers.@init_library_product(
        libasdf_cxx,
        "bin\\libasdf-cxx.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_executable_product(
        asdf_copy,
        "bin\\asdf-copy.exe",
    )

    JLLWrappers.@init_executable_product(
        asdf_demo,
        "bin\\asdf-demo.exe",
    )

    JLLWrappers.@init_executable_product(
        asdf_demo_compression,
        "bin\\asdf-demo-compression.exe",
    )

    JLLWrappers.@init_executable_product(
        asdf_demo_external,
        "bin\\asdf-demo-external.exe",
    )

    JLLWrappers.@init_executable_product(
        asdf_demo_large,
        "bin\\asdf-demo-large.exe",
    )

    JLLWrappers.@init_executable_product(
        asdf_ls,
        "bin\\asdf-ls.exe",
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
